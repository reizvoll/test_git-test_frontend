@import './components/buttons';
@import './components/spinners';
@import './components/tables';

// Base flexbox mixin
@mixin flexbox($direction: row) {
  display: flex;
  flex-direction: $direction;
}

// Flex layout classes
.flexRow {
  @include flexbox(row);
}

.flexCol {
  @include flexbox(column);
}

// Justify content classes
.justifyContentStart {
  @include flexbox;
  justify-content: flex-start;
}

.justifyContentCenter {
  @include flexbox;
  justify-content: center;
}

.justifyContentEnd {
  @include flexbox;
  justify-content: flex-end;
}

.justifyContentSpaceBetween {
  @include flexbox;
  justify-content: space-between;
}

// Align items classes
.alignItemsStart {
  @include flexbox;
  align-items: flex-start;
}

.alignItemsCenter {
  @include flexbox;
  align-items: center;
}

.alignItemsEnd {
  @include flexbox;
  align-items: flex-end;
}

// Positioning
.relative {
  position: relative;
}

// Common utility classes
.cursorPointer {
  cursor: pointer;
}

.fullFlex {
  flex: 1;
}

.fullWidth {
  width: 100%;
}

.inlineBlock {
  display: inline-block;
}

// Common container styles
.container {
  min-height: 100vh;
  background-color: #f5f5f5;
}

.mainContent {
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem;
}

.pageContent {
  background-color: white;
}

// Common card styles
.card {
  background: white;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  padding: 1rem;
}

// Common button styles
.button {
  padding: 0.5rem 1rem;
  border-radius: 4px;
  cursor: pointer;
  font-weight: 500;
  transition: all 0.2s;
}

.primaryButton {
  @extend .button;
  background-color: #24292e;
  color: white;
  border: none;

  &:hover {
    background-color: #1b1f23;
  }
}

.secondaryButton {
  @extend .button;
  background-color: #f1f1f1;
  color: #333;
  border: 1px solid #ddd;

  &:hover {
    background-color: #e1e1e1;
  }
}

.actionButton {
  @extend .button;
  background-color: #2ea44f;
  color: white;
  border: none;
  
  &:hover:not(:disabled) {
    background-color: #2c974b;
  }
  
  &:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }
}

// Common text styles
.heading1 {
  font-size: 2rem;
  font-weight: bold;
  color: #24292e;
}

.heading2 {
  font-size: 1.5rem;
  font-weight: bold;
  color: #333;
}

.text {
  font-weight: 500;
  color: #333;
}

.subtitle {
  font-size: 1.25rem;
  color: #586069;
}

.error {
  color: #dc3545;
  font-size: 1.1rem;
  background-color: #f8d7da;
  border-radius: 4px;
  padding: 1rem;
  margin: 1rem 0;
  text-align: center;
}

// Common spacing
.marginBottom {
  margin-bottom: 2rem;
}

.padding {
  padding: 1rem 2rem;
}

// Common border styles
.border {
  border: 1px solid #e1e4e8;
}

// Common background colors
.bgWhite {
  background-color: #ffffff;
}

.bgGray {
  background-color: #f6f8fa;
}

// Loading states
.loading {
  text-align: center;
  padding: 2rem;
  color: #666;
  font-size: 1.1rem;
}

.loadingContainer {
  @include flexbox;
  align-items: center;
  justify-content: center;
}

// Spinner styles
@mixin spinnerBase($size, $borderWidth) {
  height: $size;
  width: $size;
  border-width: $borderWidth;
  border-radius: 50%;
  border: $borderWidth solid #d1d5db;
  border-top-color: #111827;
  animation: spin 1s linear infinite;
}

.spinner {
  @include spinnerBase(2rem, 4px);
}

.spinnerSm {
  @include spinnerBase(1rem, 2px);
}

.spinnerMd {
  @include spinnerBase(1.5rem, 2px);
}

.spinnerLg {
  @include spinnerBase(2rem, 3px);
}

// Common form element styles
.formControl {
  padding: 0.5rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 1rem;
  background-color: white;

  &:focus {
    outline: none;
  }
}

// Table styles
.tableContainer {
  @extend .relative;
  @extend .card;
  z-index: 0;
  margin: 12px 0;
}

// Media queries
.responsiveGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
}

// Empty state patterns
.emptyState {
  @include flexbox(column);
  align-items: center;
  justify-content: center;
  padding: 5rem 2rem;
  text-align: center;
}

// Animation classes
.animate-spin {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Mobile responsive helpers
@mixin mobile {
  @media (max-width: 480px) {
    @content;
  }
}

@mixin tablet {
  @media (max-width: 768px) {
    @content;
  }
}